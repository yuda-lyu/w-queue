{"version":3,"file":"w-queue.umd.js","sources":["../src/WQueue.mjs"],"sourcesContent":["/**\r\n * 事件觸發器\r\n *\r\n * @returns {Object} 回傳事件觸發器物件，包含on與emit事件，on為註冊監聽事件，emit為觸發事件\r\n */\r\nfunction EventEmitter() {\r\n\r\n    //handles\r\n    let handles = {}\r\n\r\n    //on\r\n    function on(eventName, callback) {\r\n        if (!handles[eventName]) {\r\n            handles[eventName] = []\r\n        }\r\n        handles[eventName].push(callback)\r\n    }\r\n\r\n    //emit\r\n    function emit(eventName, ...arg) {\r\n        if (handles[eventName]) {\r\n            for (let i = 0; i < handles[eventName].length; i++) {\r\n                handles[eventName][i](...arg)\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        on,\r\n        emit,\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 佇列處理器，單生產者單消費者模式，核心使用迭代器，具有消息堵塞與可限定同時處理上限數量功能\r\n *\r\n * @param {*} [opt={}] 輸入設定物件，預設{}\r\n * @param {Number} [opt.takeNumLimit=1] 輸入同時處理上限數量整數，預設1\r\n * @returns {Object} 回傳佇列處理器物件，包含事件on、push、get、cb。on為監聽事件，需自行監聽message事件，push為加入最新佇列消息，get為回傳當前最早佇列消息，cb為於message事件內回調使迭代器可取得下一個佇列消息\r\n */\r\nfunction WQueue(opt = {}) {\r\n\r\n    //default\r\n    if (!opt.takeNumLimit) {\r\n        opt.takeNumLimit = 1\r\n    }\r\n\r\n    //takeNum\r\n    let takeNum = 0\r\n\r\n    //qs\r\n    let qs = []\r\n\r\n    //ee\r\n    let ee = new EventEmitter()\r\n\r\n    //get, like iterator\r\n    function get() {\r\n        if (qs.length > 0) {\r\n\r\n            //add takeNum\r\n            takeNum += 1\r\n\r\n            //take first\r\n            let v = qs.splice(0, 1)[0]\r\n\r\n            //r\r\n            //let r = { value: v, done: false }\r\n            let r = v\r\n\r\n            return r\r\n        }\r\n        else {\r\n\r\n            //r\r\n            //let r = { value: undefined, done: true }\r\n            let r = null\r\n\r\n            return r\r\n        }\r\n    }\r\n    ee.get = get\r\n\r\n    //cb\r\n    function cb() {\r\n\r\n        //minu takeNum\r\n        takeNum -= 1\r\n\r\n        //emit\r\n        if (qs.length > 0) {\r\n            ee.emit('message', qs)\r\n        }\r\n\r\n    }\r\n    ee.cb = cb\r\n\r\n    //push\r\n    function push(v) {\r\n\r\n        //push\r\n        qs.push(v)\r\n        //console.log('push', qs)\r\n\r\n        //emit\r\n        if (takeNum < opt.takeNumLimit) {\r\n            ee.emit('message', qs)\r\n        }\r\n\r\n    }\r\n    ee.push = push\r\n\r\n    return ee\r\n}\r\n\r\n\r\nexport default WQueue\r\n"],"names":["EventEmitter","handles","on","eventName","callback","push","emit","arg","i","length","v","qs","takeNum","opt","takeNumLimit","ee","get","splice","cb"],"mappings":";;;;sMAKA,QAASA,CAAAA,CAAT,EAAwB,IAGhBC,CAAAA,CAAO,CAAG,SAmBP,CACHC,EAAE,UAjBMC,EAAWC,EAAU,CACxBH,CAAO,CAACE,CAAD,CADiB,GAEzBF,CAAO,CAACE,CAAD,CAAPF,CAAqB,EAFI,EAI7BA,CAAO,CAACE,CAAD,CAAPF,CAAmBI,IAAnBJ,CAAwBG,CAAxBH,CAVgB,CAsBb,CAEHK,IAAI,UAVMH,EAAmB,IACzBF,CAAO,CAACE,CAAD,EAAa,4BADAI,CACA,MAAA,UAAA,cADAA,CACA,IAAA,CADAA,aAAAA,KAEf,GAAIC,CAAAA,CAAC,CAAG,EAAGA,CAAC,CAAGP,CAAO,CAACE,CAAD,CAAPF,CAAmBQ,OAAQD,CAAC,GAAI,UAChDP,CAAO,CAACE,CAAD,GAAYK,WAAMD,KAK9B,QAcX,WAA0B,SA0DbF,CAAAA,EAAKK,EAAG,CAGbC,CAAE,CAACN,IAAHM,CAAQD,CAARC,CAHa,CAOTC,CAAO,CAAGC,CAAG,CAACC,YAPL,EAQTC,CAAE,CAACT,IAAHS,CAAQ,SAARA,CAAmBJ,CAAnBI,KAlEIF,CAAAA,CAAU,wDAAJ,GAGbA,CAAG,CAACC,YAHa,GAIlBD,CAAG,CAACC,YAAJD,CAAmB,CAJD,KAQlBD,CAAAA,CAAO,CAAG,CARQ,CAWlBD,CAAE,CAAG,EAXa,CAclBI,CAAE,CAAG,GAAIf,CAAAA,CAdS,OAyCtBe,CAAAA,CAAE,CAACC,GAAHD,WAxBe,IACK,CAAZJ,CAAAA,CAAE,CAACF,OAAY,CAGfG,CAAO,EAAI,CAHI,IAMXF,CAAAA,CAAC,CAAGC,CAAE,CAACM,MAAHN,CAAU,CAAVA,CAAa,CAAbA,EAAgB,CAAhBA,CANO,OAUPD,CAAAA,CAVZ,OAkBY,OAmBhBK,CAAE,CAACG,EAAHH,WAXc,CAGVH,CAAO,EAAI,CAHD,CAMM,CAAZD,CAAAA,CAAE,CAACF,MANG,EAONM,CAAE,CAACT,IAAHS,CAAQ,SAARA,CAAmBJ,CAAnBI,GAmBRA,CAAE,CAACV,IAAHU,CAAUV,EAEHU"}